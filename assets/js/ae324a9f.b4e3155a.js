"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[9416],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(n),g=i,k=p["".concat(a,".").concat(g)]||p[g]||u[g]||l;return n?r.createElement(k,d(d({ref:t},s),{},{components:n})):r.createElement(k,d({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,d=new Array(l);d[0]=p;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,d[1]=o;for(var c=2;c<l;c++)d[c]=n[c];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const l={id:"directededge",title:"Directed edge mode",sidebar_label:"Directed edge mode",slug:"/library/index/directededge"},d=void 0,o={unversionedId:"library/index/directededge",id:"library/index/directededge",title:"Directed edge mode",description:'An H3 Directed Edge index (mode 2) represents a single directed edge between two cells (an "origin" cell and a neighboring "destination" cell). The components of the H3 Directed Edge index are packed into a 64-bit integer in order, highest bit first, as follows:',source:"@site/docs/library/index/directededge.md",sourceDirName:"library/index",slug:"/library/index/directededge",permalink:"/docs/library/index/directededge",draft:!1,editUrl:"https://github.com/uber/h3/edit/master/website/docs/library/index/directededge.md",tags:[],version:"current",frontMatter:{id:"directededge",title:"Directed edge mode",sidebar_label:"Directed edge mode",slug:"/library/index/directededge"},sidebar:"someSidebar",previous:{title:"Cell mode",permalink:"/docs/library/index/cell"},next:{title:"Vertex mode",permalink:"/docs/library/index/vertex"}},a={},c=[{value:"Bit layout of H3Index for directed edges",id:"bit-layout-of-h3index-for-directed-edges",level:2}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{align:"center"},(0,i.kt)("img",{height:"300",src:"/images/edge_mode.png"})),(0,i.kt)("p",null,'An H3 Directed Edge index (mode 2) represents a single directed edge between two cells (an "origin" cell and a neighboring "destination" cell). The components of the H3 Directed Edge index are packed into a 64-bit integer in order, highest bit first, as follows:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 bit reserved and set to 0,"),(0,i.kt)("li",{parentName:"ul"},"4 bits to indicate the H3 Unidirectional Edge index mode,"),(0,i.kt)("li",{parentName:"ul"},"3 bits to indicate the edge (1-6) of the origin cell,"),(0,i.kt)("li",{parentName:"ul"},"Subsequent bits matching the index bits of the ",(0,i.kt)("a",{parentName:"li",href:"./cell#h3-cell-index"},"origin cell"),".")),(0,i.kt)("h2",{id:"bit-layout-of-h3index-for-directed-edges"},"Bit layout of H3Index for directed edges"),(0,i.kt)("p",null,"The layout of an ",(0,i.kt)("inlineCode",{parentName:"p"},"H3Index"),' is shown below in table form. The interpretation of the "Mode-Dependent" field differs depending on the mode of the index.'),(0,i.kt)("table",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"0x0F"),(0,i.kt)("th",null,"0x0E"),(0,i.kt)("th",null,"0x0D"),(0,i.kt)("th",null,"0x0C"),(0,i.kt)("th",null,"0x0B"),(0,i.kt)("th",null,"0x0A"),(0,i.kt)("th",null,"0x09"),(0,i.kt)("th",null,"0x08"),(0,i.kt)("th",null,"0x07"),(0,i.kt)("th",null,"0x06"),(0,i.kt)("th",null,"0x05"),(0,i.kt)("th",null,"0x04"),(0,i.kt)("th",null,"0x03"),(0,i.kt)("th",null,"0x02"),(0,i.kt)("th",null,"0x01"),(0,i.kt)("th",null,"0x00")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"0x30"),(0,i.kt)("td",null,"Reserved (0)"),(0,i.kt)("td",{colspan:"4"},"Mode (2)"),(0,i.kt)("td",{colspan:"3"},"Edge"),(0,i.kt)("td",{colspan:"4"},"Resolution"),(0,i.kt)("td",{colspan:"4"},"Base cell")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"0x20"),(0,i.kt)("td",{colspan:"3"},"Base cell"),(0,i.kt)("td",{colspan:"3"},"Digit 1"),(0,i.kt)("td",{colspan:"3"},"Digit 2"),(0,i.kt)("td",{colspan:"3"},"Digit 3"),(0,i.kt)("td",{colspan:"3"},"Digit 4"),(0,i.kt)("td",null,"Digit 5")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"0x10"),(0,i.kt)("td",{colspan:"2"},"Digit 5"),(0,i.kt)("td",{colspan:"3"},"Digit 6"),(0,i.kt)("td",{colspan:"3"},"Digit 7"),(0,i.kt)("td",{colspan:"3"},"Digit 8"),(0,i.kt)("td",{colspan:"3"},"Digit 9"),(0,i.kt)("td",{colspan:"2"},"Digit 10")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"0x00"),(0,i.kt)("td",null,"Digit 10"),(0,i.kt)("td",{colspan:"3"},"Digit 11"),(0,i.kt)("td",{colspan:"3"},"Digit 12"),(0,i.kt)("td",{colspan:"3"},"Digit 13"),(0,i.kt)("td",{colspan:"3"},"Digit 14"),(0,i.kt)("td",{colspan:"3"},"Digit 15"))))}u.isMDXComponent=!0}}]);